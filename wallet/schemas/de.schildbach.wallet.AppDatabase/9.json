{
  "formatVersion": 1,
  "database": {
    "version": 9,
    "identityHash": "0d12579f890244885f5dba4901ea6a93",
    "entities": [
      {
        "tableName": "exchange_rates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`currencyCode` TEXT NOT NULL, `rate` TEXT, PRIMARY KEY(`currencyCode`))",
        "fields": [
          {
            "fieldPath": "currencyCode",
            "columnName": "currencyCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "rate",
            "columnName": "rate",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "currencyCode"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "blockchain_state",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `bestChainDate` INTEGER, `bestChainHeight` INTEGER NOT NULL, `replaying` INTEGER NOT NULL, `impediments` TEXT NOT NULL, `chainlockHeight` INTEGER NOT NULL, `mnlistHeight` INTEGER NOT NULL, `percentageSync` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bestChainDate",
            "columnName": "bestChainDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bestChainHeight",
            "columnName": "bestChainHeight",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replaying",
            "columnName": "replaying",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "impediments",
            "columnName": "impediments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "chainlockHeight",
            "columnName": "chainlockHeight",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mnlistHeight",
            "columnName": "mnlistHeight",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "percentageSync",
            "columnName": "percentageSync",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "blockchain_identity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `creationState` INTEGER NOT NULL, `creationStateErrorMessage` TEXT, `username` TEXT, `restoring` INTEGER NOT NULL, `creditFundingTxId` BLOB, `preorderSalt` BLOB, `registrationStatus` INTEGER, `usernameStatus` INTEGER, `creditBalance` INTEGER, `activeKeyCount` INTEGER, `totalKeyCount` INTEGER, `keysCreated` INTEGER, `currentMainKeyIndex` INTEGER, `currentMainKeyType` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creationState",
            "columnName": "creationState",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creationStateErrorMessage",
            "columnName": "creationStateErrorMessage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "restoring",
            "columnName": "restoring",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creditFundingTxId",
            "columnName": "creditFundingTxId",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "preorderSalt",
            "columnName": "preorderSalt",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "registrationStatus",
            "columnName": "registrationStatus",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "usernameStatus",
            "columnName": "usernameStatus",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "creditBalance",
            "columnName": "creditBalance",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "activeKeyCount",
            "columnName": "activeKeyCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "totalKeyCount",
            "columnName": "totalKeyCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "keysCreated",
            "columnName": "keysCreated",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "currentMainKeyIndex",
            "columnName": "currentMainKeyIndex",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "currentMainKeyType",
            "columnName": "currentMainKeyType",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "dashpay_profile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `publicMessage` TEXT NOT NULL, `avatarUrl` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`userId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicMessage",
            "columnName": "publicMessage",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "userId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "dashpay_contact_request",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `toUserId` TEXT NOT NULL, `encryptedPublicKey` BLOB NOT NULL, `senderKeyIndex` INTEGER NOT NULL, `recipientKeyIndex` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `encryptedAccountLabel` BLOB, PRIMARY KEY(`userId`, `toUserId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "toUserId",
            "columnName": "toUserId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "encryptedPublicKey",
            "columnName": "encryptedPublicKey",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "senderKeyIndex",
            "columnName": "senderKeyIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "recipientKeyIndex",
            "columnName": "recipientKeyIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "encryptedAccountLabel",
            "columnName": "encryptedAccountLabel",
            "affinity": "BLOB",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "userId",
            "toUserId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '0d12579f890244885f5dba4901ea6a93')"
    ]
  }
}